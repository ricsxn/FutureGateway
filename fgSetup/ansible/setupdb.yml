# FutureGateway database component playbook 
#
# Author: Riccardo Bruno <riccardo.bruno@ct.infn.it>

- hosts: fgdatabase
  vars_files:
    - vars/fgdatabase.yml
    - vars/fgcommons.yml
  remote_user: "{{ fg_connect_user }}"
  become: yes
  become_method: sudo
  roles:
    - {role: geerlingguy.mysql }
    - {role: geerlingguy.git }
  tasks:
    - name: FGUser | Creatign FutureGateway user
      user: name="{{ fg_user }}"
            password="{{ fg_pass }}" 
            comment="FutureGateway user"
            generate_ssh_key=yes
    - name: DB | Cloning DB from fgAPIServer
      git: repo="{{ fg_repo_git }}"
           dest="/home/{{ fg_user }}"
           version="{{ fg_repo_gitver }}"
           force=yes
    # Next statements have to be changed with lineinfile or replace 
    - name: CustomizeSQL | Customize database creation parameters
      shell: cp /home/{{ fg_user }}/fgAPIServer/fgapiserver_db.sql /tmp/fgapiserver_db.sql;sed -i -e "s/drop database if exists fgapiserver/drop database if exists {{ fg_db_name }}/" /tmp/fgapiserver_db.sql;sed -i -e "s/create database fgapiserver/create database {{ fg_db_name }}/" /tmp/fgapiserver_db.sql;sed -i -e "s/grant all on fgapiserver/grant all on {{ fg_db_name }}/" /tmp/fgapiserver_db.sql;sed -i -e "s/{{ fg_db_name }}.* TO 'fgapiserver'/{{ fg_db_name }}.* TO \'{{ fg_db_user }}\'/g" /tmp/fgapiserver_db.sql;sed -i -e "s/IDENTIFIED BY \"fgapiserver_password\"/IDENTIFIED BY \"{{ fg_db_password }}\"/" /tmp/fgapiserver_db.sql; sed -i -e "s/use fgapiserver/use {{ fg_db_name }}/" /tmp/fgapiserver_db.sql
        creates=/tmp/fgapiserver_db.sql
    - name: Configuration | Get futuregateway configuration files
      git: repo="{{ fg_fgSetup_git }}"
           dest="/home/{{ fg_user }}/fgSetup"
           version="{{ fg_fgSetup_gitver }}"
           force=yes
    - name: chown_fgAPIServerRepo | Change ownership for fgAPIServer repo to futuregateway user
      file: path="/home/{{ fg_user }}/FutureGateway/{{ item }}" owner="{{ fg_user }}" group="{{ fg_user }}" mode=0775 recurse=yes
      with_items:
         - fgAPIServer
         - fgSetup
    # FutureGateway database creation
    - name: DBinst0 | Database creation check 
      mysql_db: name=fgapiserver
                state=present
                login_host="{{ inventory_hostname }}"
                login_port="{{ mysql_port }}"
                login_user=root
                login_password="{{ mysql_root_password }}"
      register: db_present
    - name: DBinst1 | Database creation and installation
      mysql_db: name=fgapiserver
                state=import
                login_host="{{ inventory_hostname }}"
                login_port="{{ mysql_port }}"
                login_user=root
                login_password="{{ mysql_root_password }}"
                target=/tmp/fgapiserver_db.sql
      when: db_present.changed
    # Environment directory 
    - name: EnvDir | Environment settings 
      file: path="/home/{{ fg_user }}/.fgprofile" state=directory owner="{{ fg_user }}" group="{{ fg_user }}" mode=0775 recurse=yes
    # Commons environment
    - name: EnvCommon | FutureGateway commons environment settings
      copy: src="/home/{{ fg_user }}/fgSetup/setup_commons.sh"
            dest="/home/{{ fg_user }}/.fgprofile/commons"
            owner="{{ fg_user }}"
            group="{{ fg_user }}"
            mode=0644
    # Load main environment settings
    - name: EnvFGDB | FGDB environment setting loader
      copy: content="{{ fg_fgdb }}"
            dest="/home/{{ fg_user }}/.fgprofile/fgdb"
            owner="{{ fg_user }}"
            group="{{ fg_user }}"
            mode=0644
    # Load FutureGateway profile components in bash_profile file
    - name: EnvProfile | Insert load profile line in .profile file
      blockinfile: block="for f in $(find $HOME/.fgprofile -type f); do source $f; done {{ '#' }} FGLOADENV"
                   create=yes
                   dest="/home/{{ fg_user }}/.profile"
                   owner="{{ fg_user }}"
                   group="{{ fg_user }}"
                   mode=0644
    # Cleanup unnecessary and temporary stuff
    #- name: Cleanup | Clean unnecessary and temporary stuff
    #  file: path="/tmp/fgapiserver_db.sql state=absent"

